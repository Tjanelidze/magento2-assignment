<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/
  * @author     Mediotype                     https://www.mediotype.com/
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="VertexAsRegisteredCustomerWithBillToAndShipDifferentCheckPhysicalProductTaxInMinicartTest">
        <annotations>
            <features value="Vertex"/>
            <group value="Vertex"/>

            <stories value="As a store owner, I must have accurate taxes calculated for a registered customer"/>
            <title value="Validate Taxes in Minicart, Registered Customer, Physical Product, Bill-To&lt;&gt;Ship-To"/>
            <description value="Validate that a registered customer with a bill-to and a ship-to address that are the same and having a cart with a simple product have taxes calculated when the customer opens the minicart"/>

            <severity value="AVERAGE"/>
        </annotations>
        <before>
            <actionGroup ref="VertexCreateTwoOptionConfigurableProductActionGroup" stepKey="createConfigurableProduct1">
                <argument name="option1Price" value="{{Vertex_100USD_PA_Only_Values.price}}" />
            </actionGroup>
            <actionGroup ref="VertexCreateTwoOptionConfigurableProductActionGroup" stepKey="createConfigurableProduct2">
                <argument name="option1Price" value="{{Vertex_18USD_PA_Only_Values.price}}" />
            </actionGroup>
            <createData entity="VertexProductTaxClass_Clothing" stepKey="createTaxClass" />
            <createData entity="VertexSimpleProduct" stepKey="createSimpleProduct">
                <field key="price">{{Vertex_100USD_Clothing_PA_Only_Values.price}}</field>
                <requiredEntity createDataKey="createCategoryCreateConfigurableProduct1"/>
                <requiredEntity createDataKey="createTaxClass" />
            </createData>

            <createData entity="Vertex_Customer_WinstonJohn" stepKey="createCustomer"/>
        </before>
        <after>
            <deleteData stepKey="deleteSimpleProduct" createDataKey="createSimpleProduct"/>
            <deleteData stepKey="deleteTaxClass" createDataKey="createTaxClass" />
            <deleteData stepKey="deleteChildProduct1" createDataKey="createConfigChildProduct1CreateConfigurableProduct1" />
            <deleteData stepKey="deleteChildProduct2" createDataKey="createConfigChildProduct2CreateConfigurableProduct1" />
            <deleteData stepKey="deleteConfigProduct" createDataKey="ProductCreateConfigurableProduct1" />
            <deleteData stepKey="deleteConfigProductAttribute" createDataKey="ProductAttributeCreateConfigurableProduct1" />
            <deleteData stepKey="deleteCategory" createDataKey="createCategoryCreateConfigurableProduct1" />
            <deleteData stepKey="deleteChildProduct1Config2" createDataKey="createConfigChildProduct1CreateConfigurableProduct2" />
            <deleteData stepKey="deleteChildProduct2Config2" createDataKey="createConfigChildProduct2CreateConfigurableProduct2" />
            <deleteData stepKey="deleteConfigProductConfig2" createDataKey="ProductCreateConfigurableProduct2" />
            <deleteData stepKey="deleteConfigProductAttributeConfig2" createDataKey="ProductAttributeCreateConfigurableProduct2" />
            <deleteData stepKey="deleteCategoryConfig2" createDataKey="createCategoryCreateConfigurableProduct2"/>
            <deleteData stepKey="deleteCustomer" createDataKey="createCustomer"/>
        </after>

        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="customerLogin">
            <argument name="Customer" value="$$createCustomer$$"/>
        </actionGroup>
        <actionGroup ref="VertexAddSingleOptionConfigurableProductToCartActionGroup" stepKey="addFirstConfigToCart">
            <argument name="product" value="$$ProductCreateConfigurableProduct1$$" />
            <argument name="optionConfig" value="$$Option1CreateConfigurableProduct1$$" />
            <argument name="attributeConfig" value="$$ProductAttributeCreateConfigurableProduct1$$" />
        </actionGroup>

        <actionGroup ref="VertexAddSingleOptionConfigurableProductToCartActionGroup" stepKey="addSecondConfigToCart">
            <argument name="product" value="$$ProductCreateConfigurableProduct2$$" />
            <argument name="optionConfig" value="$$Option1CreateConfigurableProduct2$$" />
            <argument name="attributeConfig" value="$$ProductAttributeCreateConfigurableProduct2$$" />
        </actionGroup>

        <actionGroup ref="AddSimpleProductToCartActionGroup" stepKey="addSimpleProductToCart">
            <argument name="product" value="$$createSimpleProduct$$" />
        </actionGroup>

        <!-- Add simple product to cart -->

        <click stepKey="showMinicart" selector="{{StorefrontMinicartSection.showCart}}"/>

        <actionGroup ref="VertexCheckProductPricingInMiniCartActionGroup" stepKey="checkConfig1">
            <argument name="product" value="$$ProductCreateConfigurableProduct1$$" />
            <argument name="priceExclTax" value="{{Vertex_100USD_PA_Only_Values.price}}" />
            <argument name="priceInclTax" value="{{Vertex_100USD_PA_Only_Values.priceInclTax}}" />
        </actionGroup>
        <actionGroup ref="VertexCheckProductPricingInMiniCartActionGroup" stepKey="checkConfig2">
            <argument name="product" value="$$ProductCreateConfigurableProduct2$$" />
            <argument name="priceExclTax" value="{{Vertex_18USD_PA_Only_Values.price}}" />
            <argument name="priceInclTax" value="{{Vertex_18USD_PA_Only_Values.priceInclTax}}" />
        </actionGroup>
        <actionGroup ref="VertexCheckProductPricingInMiniCartActionGroup" stepKey="checkSimpleProduct">
            <argument name="product" value="$$createSimpleProduct$$" />
            <argument name="priceExclTax" value="{{Vertex_100USD_Clothing_PA_Only_Values.price}}" />
            <argument name="priceInclTax" value="{{Vertex_100USD_Clothing_PA_Only_Values.priceInclTax}}" />
        </actionGroup>
        <actionGroup ref="VertexCheckSubtotalInMiniCartActionGroup" stepKey="checkSubtotal">
            <argument name="subtotalExclTax" value="{{Vertex_100USD_and_18USD_and_100USD_Clothing_PA_Only_Totals.subtotal}}" />
            <argument name="subtotalInclTax" value="{{Vertex_100USD_and_18USD_and_100USD_Clothing_PA_Only_Totals.subtotalInclTax}}" />
        </actionGroup>
        <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="customerLogout"/>
    </test>
</tests>
